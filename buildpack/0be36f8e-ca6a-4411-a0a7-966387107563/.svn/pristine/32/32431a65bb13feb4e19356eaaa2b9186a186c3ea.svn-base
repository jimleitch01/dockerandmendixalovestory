// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package inspections.proxies;

public class Finding extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Inspections.Finding";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Title("Title"),
		Description("Description"),
		Repairable("Repairable"),
		TenantsResponsibility("TenantsResponsibility"),
		PublicThumbnailPath("PublicThumbnailPath"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		Finding_InspectionItem("Inspections.Finding_InspectionItem");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Finding(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Inspections.Finding"));
	}

	protected Finding(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject findingMendixObject)
	{
		super(context, findingMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Inspections.Finding", findingMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Inspections.Finding");
	}

	/**
	 * @deprecated Use 'Finding.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static inspections.proxies.Finding initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return inspections.proxies.Finding.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static inspections.proxies.Finding initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new inspections.proxies.Finding(context, mendixObject);
	}

	public static inspections.proxies.Finding load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return inspections.proxies.Finding.initialize(context, mendixObject);
	}

	public static java.util.List<inspections.proxies.Finding> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<inspections.proxies.Finding> result = new java.util.ArrayList<inspections.proxies.Finding>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Inspections.Finding" + xpathConstraint))
			result.add(inspections.proxies.Finding.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Title
	 */
	public final java.lang.String getTitle()
	{
		return getTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of Title
	 */
	public final java.lang.String getTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Title.toString());
	}

	/**
	 * Set value of Title
	 * @param title
	 */
	public final void setTitle(java.lang.String title)
	{
		setTitle(getContext(), title);
	}

	/**
	 * Set value of Title
	 * @param context
	 * @param title
	 */
	public final void setTitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String title)
	{
		getMendixObject().setValue(context, MemberNames.Title.toString(), title);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Repairable
	 */
	public final java.lang.Boolean getRepairable()
	{
		return getRepairable(getContext());
	}

	/**
	 * @param context
	 * @return value of Repairable
	 */
	public final java.lang.Boolean getRepairable(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Repairable.toString());
	}

	/**
	 * Set value of Repairable
	 * @param repairable
	 */
	public final void setRepairable(java.lang.Boolean repairable)
	{
		setRepairable(getContext(), repairable);
	}

	/**
	 * Set value of Repairable
	 * @param context
	 * @param repairable
	 */
	public final void setRepairable(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean repairable)
	{
		getMendixObject().setValue(context, MemberNames.Repairable.toString(), repairable);
	}

	/**
	 * @return value of TenantsResponsibility
	 */
	public final java.lang.Boolean getTenantsResponsibility()
	{
		return getTenantsResponsibility(getContext());
	}

	/**
	 * @param context
	 * @return value of TenantsResponsibility
	 */
	public final java.lang.Boolean getTenantsResponsibility(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.TenantsResponsibility.toString());
	}

	/**
	 * Set value of TenantsResponsibility
	 * @param tenantsresponsibility
	 */
	public final void setTenantsResponsibility(java.lang.Boolean tenantsresponsibility)
	{
		setTenantsResponsibility(getContext(), tenantsresponsibility);
	}

	/**
	 * Set value of TenantsResponsibility
	 * @param context
	 * @param tenantsresponsibility
	 */
	public final void setTenantsResponsibility(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean tenantsresponsibility)
	{
		getMendixObject().setValue(context, MemberNames.TenantsResponsibility.toString(), tenantsresponsibility);
	}

	/**
	 * @return value of Finding_InspectionItem
	 */
	public final inspections.proxies.InspectionItem getFinding_InspectionItem() throws com.mendix.core.CoreException
	{
		return getFinding_InspectionItem(getContext());
	}

	/**
	 * @param context
	 * @return value of Finding_InspectionItem
	 */
	public final inspections.proxies.InspectionItem getFinding_InspectionItem(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		inspections.proxies.InspectionItem result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Finding_InspectionItem.toString());
		if (identifier != null)
			result = inspections.proxies.InspectionItem.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Finding_InspectionItem
	 * @param finding_inspectionitem
	 */
	public final void setFinding_InspectionItem(inspections.proxies.InspectionItem finding_inspectionitem)
	{
		setFinding_InspectionItem(getContext(), finding_inspectionitem);
	}

	/**
	 * Set value of Finding_InspectionItem
	 * @param context
	 * @param finding_inspectionitem
	 */
	public final void setFinding_InspectionItem(com.mendix.systemwideinterfaces.core.IContext context, inspections.proxies.InspectionItem finding_inspectionitem)
	{
		if (finding_inspectionitem == null)
			getMendixObject().setValue(context, MemberNames.Finding_InspectionItem.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Finding_InspectionItem.toString(), finding_inspectionitem.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final inspections.proxies.Finding that = (inspections.proxies.Finding) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Inspections.Finding";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
