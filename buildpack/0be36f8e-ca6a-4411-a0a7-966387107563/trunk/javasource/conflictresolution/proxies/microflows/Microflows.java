// This file was generated by Mendix Modeler 7.8.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package conflictresolution.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the ConflictResolution module
	public static conflictresolution.proxies.SyncResult firstWins(IContext context, conflictresolution.proxies.SyncObject _editedSyncObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EditedSyncObject", _editedSyncObject == null ? null : _editedSyncObject.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "ConflictResolution.FirstWins", params);
			return result == null ? null : conflictresolution.proxies.SyncResult.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean hasConflict(IContext context, conflictresolution.proxies.SyncObject _syncObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SyncObject", _syncObject == null ? null : _syncObject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ConflictResolution.HasConflict", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static conflictresolution.proxies.SyncResult lastWins(IContext context, conflictresolution.proxies.SyncObject _editedSyncObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EditedSyncObject", _editedSyncObject == null ? null : _editedSyncObject.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "ConflictResolution.LastWins", params);
			return result == null ? null : conflictresolution.proxies.SyncResult.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sUB_CreateSyncError(IContext context, conflictresolution.proxies.SyncObject _databaseSyncObject, java.lang.String _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseSyncObject", _databaseSyncObject == null ? null : _databaseSyncObject.getMendixObject());
			params.put("Message", _message);
			Core.execute(context, "ConflictResolution.SUB_CreateSyncError", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sUB_HasConflict(IContext context, conflictresolution.proxies.SyncObject _editedSyncObject, conflictresolution.proxies.SyncObject _databaseSyncObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EditedSyncObject", _editedSyncObject == null ? null : _editedSyncObject.getMendixObject());
			params.put("DatabaseSyncObject", _databaseSyncObject == null ? null : _databaseSyncObject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ConflictResolution.SUB_HasConflict", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sUB_RemoveOldSyncErrorsForUser(IContext context, conflictresolution.proxies.SyncObject _editedSyncObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EditedSyncObject", _editedSyncObject == null ? null : _editedSyncObject.getMendixObject());
			Core.execute(context, "ConflictResolution.SUB_RemoveOldSyncErrorsForUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}